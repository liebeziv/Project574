Research Ideas

Technology pre-study: investigate the data structure, rate limitation and Webhook capability of mainstream platforms (honor, Garmin, Apple Health, Strava，Honor), and evaluate how the existing functionality of Django/Celery can support periodic synchronisation.
Architecture sketch: divide into wearable client configuration, wearable access token user authorisation, wearable sampling activity data, service layer adapters and task scheduling modules, and interface with training logs/nutrition modules via signals/services.
Prototyping: Prioritise the implementation of a minimal service provider (simulated environment) + honor adapter to validate key aspects such as authorisation refresh, activity entry, and automatic log generation.
Validation and Iteration: Validate the synchronisation process through unit testing and manual triggering of Celery tasks, evaluate options for expanding more service providers and front-end configuration portals.

{
  "samplePoints": {
    "com.huawei.instantaneous.body_weight": {
      "startTime": 1640210232971000000,
      "endTime": 1640210232971000000,
      "dataTypeName": "com.huawei.instantaneous.body_weight",
      "value": [
        {"fieldName": "body_weight", "floatValue": 81.80000305175781},
        {"fieldName": "protein_rate", "floatValue": 0.0}
      ]
    }
  }
}

next：Simplified prototype


